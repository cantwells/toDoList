{"version":3,"sources":["components/Task.jsx","App.js","index.js"],"names":["Task","id","text","checked","onChangeInput","removeTask","error","className","type","onChange","HandleInputChange","htmlFor","onClick","App","useState","tasks","state","setState","value","setValue","setError","useEffect","allTasks","localStorage","getItem","JSON","parse","setItem","stringify","copyTasks","forEach","task","findTask","find","idx","indexOf","splice","onSubmit","event","preventDefault","newTask","Date","getTime","name","target","placeholder","some","item","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAoBeA,EApBF,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,GAAIC,EAAsD,EAAtDA,KAAMC,EAAgD,EAAhDA,QAASC,EAAuC,EAAvCA,cAAeC,EAAwB,EAAxBA,WAAYC,EAAY,EAAZA,MAI1D,OACI,qBAAIC,UAAS,mBAAeD,GAASH,EAAW,cAAgB,IAAhE,UACI,sBAAKI,UAAU,aAAf,UACA,uBAAOC,KAAK,WACJD,UAAU,iBACVN,GAAIA,EACJE,QAASA,EACTM,SAAU,kBAVA,SAAAR,GACtBG,EAAcH,GAScS,CAAkBT,MAE1C,uBAAOU,QAASV,EAAhB,SAAqBC,OAErB,sBAAMK,UAAU,QAAQK,QAAS,kBAAMP,EAAWJ,EAAIE,IAAtD,mBCyEGU,MApFf,WACE,MAA0BC,mBAAS,CAAEC,MAAO,KAA5C,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BH,mBAAS,IAAnC,mBAAOI,EAAP,KAAcC,EAAd,KACA,EAA0BL,mBAAS,IAAnC,mBAAOR,EAAP,KAAcc,EAAd,KAEAC,qBAAW,WACT,IAAMC,EAAWC,aAAaC,QAAQ,YACnCF,GAAUL,EAAS,CAAEF,MAAOU,KAAKC,MAAMJ,OACzC,IAEHD,qBAAW,WACTE,aAAaI,QAAQ,WAAYF,KAAKG,UAAUZ,EAAMD,UACrD,CAACC,EAAMD,QAEV,IAiBMX,EAAgB,SAAAH,GACpB,IAAM4B,EAAS,YAAOb,EAAMD,OAC5Bc,EAAUC,SAAS,SAAAC,GACdA,EAAK9B,KAAOA,IAAI8B,EAAK5B,SAAW4B,EAAK5B,YAE1Cc,EAAS,CAAEF,MAAOc,KAGdxB,EAAa,SAACJ,EAAIE,GACtB,GAAIA,EAQFiB,EAAS,uFARC,CACV,IAAMS,EAAS,YAAOb,EAAMD,OACtBiB,EAAWH,EAAUI,MAAM,SAAAF,GAAI,OAAIA,EAAK9B,KAAOA,KAC/CiC,EAAML,EAAUM,QAAQH,GAC9BH,EAAUO,OAAOF,EAAK,GACtBjB,EAAS,CAAEF,MAAOc,IAClBT,EAAS,MAMb,OACE,qBAAKb,UAAU,UAAf,SACI,sBAAKA,UAAU,OAAf,UACE,0CACA,uBAAM8B,SAtCG,SAAAC,GACfA,EAAMC,iBACN,IAAMC,EAAU,GAChBA,EAAQvC,GAAR,eAAoB,IAAIwC,MAAOC,WAC/BF,EAAQtC,KAAOgB,EACfsB,EAAQrC,SAAU,EAClBqC,EAAQlC,MAAQA,EAChBW,EAAS,CAAEF,MAAM,GAAD,mBAAMC,EAAMD,OAAZ,CAAmByB,MACnCrB,EAAS,KA8BH,UACI,uBAAOX,KAAK,OACJmC,KAAK,OACLzB,MAAOA,EACPT,SA9CC,SAAA6B,GACnBnB,EAASmB,EAAMM,OAAO1B,QA8CJ2B,YAAY,mDACZtC,UAAU,UAClB,wBAAQC,KAAK,SAASD,UAAU,MAAhC,iEAEJ,qBAAKA,UAAS,gBAAYD,GApCNU,EAAMD,MAAM+B,MAAK,SAAAC,GAAI,OAAIA,EAAK5C,YAoCK,SAAvD,SAAmEG,IACnE,oBAAIC,UAAU,QAAd,SAEIS,EAAMD,MAAMiC,KAAK,SAAAjB,GAAI,OAAI,cAAC,EAAD,CACO9B,GAAI8B,EAAK9B,GACTC,KAAM6B,EAAK7B,KACXC,QAAS4B,EAAK5B,QACdC,cAAeA,EACfC,WAAYA,EACZC,MAAOyB,EAAKzB,OANRyB,EAAK9B,eCpEvDgD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.42df944a.chunk.js","sourcesContent":["const Task = ({ id, text, checked, onChangeInput, removeTask, error }) => {\r\n    const HandleInputChange = id => {\r\n        onChangeInput(id);\r\n    }\r\n    return (\r\n        <li className={`itemTask ${(error && checked) ? ' item-error' : ''}`}>\r\n            <div className=\"inputBlock\">\r\n            <input type=\"checkbox\"\r\n                    className=\"customCheckbox\" \r\n                    id={id}\r\n                    checked={checked}\r\n                    onChange={() => HandleInputChange(id)}\r\n                    />\r\n            <label htmlFor={id}>{text}</label>\r\n            </div>\r\n            <span className=\"close\" onClick={() => removeTask(id, checked)}>x</span>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Task;","import { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport Task from './components/Task';\r\n\r\nfunction App() {\r\n  const [state, setState] = useState({ tasks: [] });\r\n  const [value, setValue] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect( () => {\r\n    const allTasks = localStorage.getItem('toDoList');\r\n    if(allTasks) setState({ tasks: JSON.parse(allTasks)});\r\n  }, []);\r\n\r\n  useEffect( () => {\r\n    localStorage.setItem('toDoList', JSON.stringify(state.tasks) );\r\n  }, [state.tasks])\r\n\r\n  const handleChange = event => {\r\n    setValue(event.target.value);\r\n  }\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    const newTask = {}\r\n    newTask.id = `task${new Date().getTime()}`;\r\n    newTask.text = value;\r\n    newTask.checked = false;\r\n    newTask.error = error;\r\n    setState({ tasks: [...state.tasks, newTask]});\r\n    setValue('');\r\n  }\r\n\r\n  const isCheckMarked = () => state.tasks.some(item => item.checked);\r\n  \r\n  const onChangeInput = id => {\r\n    const copyTasks = [...state.tasks];\r\n    copyTasks.forEach( task => {\r\n      if(task.id === id) task.checked = !task.checked; \r\n    })\r\n    setState({ tasks: copyTasks});\r\n  }\r\n  \r\n  const removeTask = (id, checked) => {\r\n    if(!checked){\r\n      const copyTasks = [...state.tasks];\r\n      const findTask = copyTasks.find( task => task.id === id);\r\n      const idx = copyTasks.indexOf(findTask);\r\n      copyTasks.splice(idx, 1);\r\n      setState({ tasks: copyTasks});\r\n      setError('');\r\n    }else {\r\n      setError('Нельзя удалить');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n        <div className=\"main\">\r\n          <h1>toDoList</h1>    \r\n          <form onSubmit={onSubmit}>\r\n              <input type=\"text\" \r\n                      name=\"task\" \r\n                      value={value}\r\n                      onChange={handleChange}\r\n                      placeholder=\"Описание\" \r\n                      className=\"field\"/>\r\n              <button type=\"submit\" className=\"btn\">Добавить</button>\r\n          </form>\r\n          <div className={`error ${(error && isCheckMarked()) && ' show'}`}>{error}</div>\r\n          <ul className=\"items\">\r\n            {\r\n              state.tasks.map( task => <Task key={task.id} \r\n                                              id={task.id} \r\n                                              text={task.text} \r\n                                              checked={task.checked}\r\n                                              onChangeInput={onChangeInput}\r\n                                              removeTask={removeTask}\r\n                                              error={task.error}\r\n                                              /> )\r\n            }\r\n            \r\n          </ul>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}